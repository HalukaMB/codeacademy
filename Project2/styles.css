@font-face {
    font-family: "general-fonts";
    src: url(fonts/Rex-BoldInline.otf);
}

@font-face {
    font-family: "title";
    src: url(fonts/Metropolis1920-Regular.otf);
}

:root {
    --baseunitheight: 4px;
    --baseunitlength: 6px;
}

body {
    font-size: calc(var(--baseunitheight*2));
    color: #000;
    font-family: "general-fonts";
}

header {
    /* Set the header to fixed position so that it is a constant navbar */
    position: fixed;
    top: 0;
    left: 0;

    /* set size */
    height: calc(var(--baseunitheight)*20);
    width: calc(100% - var(--baseunitlength));
    margin-bottom: calc(var(--baseunitheight)*5);
    border-bottom: var(--baseunitheight);

    /* define style */
    background-color: antiquewhite;
    border-style: solid;
    border-color: #000;

    /* Make it into a flexbox container */
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* Here we create a combination a header that also has a hamburger nav */
/* We do this using a webpage title */
.webpage-title {
    font-size: calc(var(--baseunitheight)*7);
    margin-top: calc(var(--baseunitheight)*2);
    font-family: "title";
    justify-content: center;
}
/* a place holder that has the same size as the nav bar we are going to use later*/
.placeholder {
    width: calc(var(--baseunitlength)*5.5);
    height: calc(var(--baseunitheight)*10);
    padding-left: calc(var(--baseunitlength)*3);
    padding-right: calc(var(--baseunitlength)*3);
}

/* And the specific hamburger nav */
.hamburger-logo {
    float: left;
    padding-left: calc(var(--baseunitlength)*3);
    padding-right: calc(var(--baseunitlength)*3);
}

.hamburger-logo span {
    width: calc(var(--baseunitlength)*5.5);
    height: calc(var(--baseunitheight)*1);
    border-radius: 25%;
    background: #000000; border-radius: var(--baseunitheight);
    display: block;
    margin: 25% 0;
    transform-origin: center; 
    transition: transform 0.3s ease-in-out, top 0.3s ease-in-out, opacity 0.3s ease-in-out;
}

/* And we spread the logo out using nth */
.hamburger-logo span:nth-child(1) { top:  calc(var(--baseunitheight)*3); }
.hamburger-logo span:nth-child(2) { top: calc(var(--baseunitheight)*6); }
.hamburger-logo span:nth-child(3) { top: calc(var(--baseunitheight)*9); }

/*Lastly we design the nav-bar that will only appear once the menu is clicked*/
nav {
    background-color: rgb(216, 216, 216);
    width: 100%;
    margin: calc(var(--baseunitheight)*15) 0px 0px 0px;
    position: fixed;
    left: -100%;
    border: var(--baseunitheight);
    border-style: solid;
    border-color: #000;
    box-sizing: border-box;
    transition: left 0.3s ease-in-out;
}

label {
    cursor: pointer;
}

/* And then we build together the whole trigger logic. If it is checked */

/* if the trigger is checked, we turn outer ones of the spans */
 #trigger:checked + .hamburger-logo span:nth-child(1){
    transform: translateY(calc(var(--baseunitlength)*2)) rotate(45deg);
    top: calc(var(--baseunitheight)*-4);

    }
 #trigger:checked + .hamburger-logo span:nth-child(3){
    transform: translateY(calc(var(--baseunitlength)*-2)) rotate(-45deg);
    top: calc(var(--baseunitheight)*2);

     }
     /* and erase the middle one */
 #trigger:checked + .hamburger-logo span:nth-child(2){
    opacity: 0%;
   }

     /* and we let the nav appear */

 #trigger:checked~nav {
    left: calc(var(--baseunitlength)*2);
    width: calc(100vw - (var(--baseunitlength)*4));
}

li {
    margin-bottom: calc(var(--baseunitheight)*3);
    color: #000
}
/* And lastly we hide the trigger itself */
#trigger{
    display: none;
}

/* We create on content div to push all the things below the fixed header */
.content {
    margin: calc(var(--baseunitheight)*30) 0;
}

.title {
    font-family: "title";
    font-size: calc(var(--baseunitheight)*10);
    padding-top: calc(var(--baseunitheight)*3);
    padding-bottom: calc(var(--baseunitheight)*3);
    padding-left: calc(var(--baseunitlength)*2);
}

.subtitle {
    font-size: calc(var(--baseunitheight)*5);
    padding-top: calc(var(--baseunitheight));
    padding-left: calc(var(--baseunitlength)*2);
    padding-bottom: calc(var(--baseunitheight)*2);
}

.highlighted {
    color: blue;
}

/* This is the bit of the CSS specifically for the found items */

/* each found item is encapsulated in one div */
.found-item {
    margin: 2vh 1vw 2vh 1vw;
    background-color: antiquewhite;
    display: flex;
    align-items: center;
}
/* in which we have the date, the description, the image of the found item
and a possibility to claim the found item as yours */
.image-date {
    width: 20vw;
    padding-left: 2%;
    padding-right: 1%;
    padding-top: 0.5%;
    padding-bottom: 0.5%;
}

.image-description {
    width: 20vw;
    padding-left: 4%;
    padding-right: 1%;
    margin-top: 5%;
    padding-bottom: 0.5%;
}

.image-itself {
    width: 50vw;
    object-fit: contain;
    padding: 1.5% 0;
}

.yours {
    font-size: calc(var(--baseunitheight)*4);
    width: 10vw;
    margin-left: 3%;
    padding-right: 1%;
    padding-top: 0.5%;
    padding-bottom: 0.5%;
}
/* And we have an alternative styling for bigger screens */
@media (min-width: 720px) {
    .found-items-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
    }

    .image-description {
        width: 7vw;
        padding-left: 2%;
        padding-right: 1%;
        padding-top: 0.5%;
        padding-bottom: 0.5%;
    }

    .image-itself {
        width: 17vw;
        object-fit: contain;

    }

    .yours {
        max-width: 10vw;
        align-items: end;
        padding-left: 2%;
        padding-right: 1%;
        padding-top: 0.5%;
        padding-bottom: 0.5%;
    }
}


/* This is the css for the found page 
We pad the form a little*/
form {
    padding-left: calc(var(--baseunitlength)*1);
    padding-top: calc(var(--baseunitheight)*1);
    background-color: antiquewhite;
}

/*and then we split each section of the form
into a question div*/
.question {
    padding: 2%;
    width: 95%;
    border: 1px solid #090909;
    border-left: calc(var(--baseunitlength)) solid;
    border-right: calc(var(--baseunitlength)) solid;
    border-collapse: collapse;
}

/*for the borders to look evev throughout we have to target
the first and last once more*/
.question:first-child {
    border-top: calc(var(--baseunitlength)) solid #090909;
    border-collapse: collapse;
}

.question:last-child {
    border-bottom: calc(var(--baseunitlength)) solid #090909;
    border-collapse: collapse;
}

/*the second question section is called claims */
.claims {
    display: flex;
}

.claims>label {
    text-align: center;
    padding-top: calc(var(--baseunitheight)*14);
    font-size: calc(var(--baseunitheight)*4);
    margin-left: calc(var(--baseunitlength)*6);
    margin-right: calc(var(--baseunitlength)*3);
}

.claims:nth-child(4) {
    padding-bottom: calc(var(--baseunitheight)*5);
}

/* and here we ask users for written input as well */
.claims input[type=text] {
    text-align: center;
    height: calc(var(--baseunitheight)*30);
    width: 75%;
    font-family: "general-fonts";
    font-size: calc(var(--baseunitheight)*4);
    color: rgb(174, 173, 173)
}

/* lastly we ask for a decision where the found item should be brought to */
#places {
    text-align: left;
    font-family: "general-fonts";
    font-size: calc(var(--baseunitheight)*4);
    color: rgb(174, 173, 173)
}

input[type="submit"] {
    margin-top: calc(var(--baseunitheight)*2);
}

/*and this is for the page that leads you to an error when you submit*/
.error-image{
    margin:auto;
    display: block;

}

/* this part of the css is regarding the results of the search
in a table and a small graph it is visualised what this webpage
has archieved so far */
.results {
    width: 75%;
    border: 1px solid #090909;
    border-bottom: 1px solid black;
    border-collapse: collapse;
}

table {
    margin-left: calc(var(--baseunitlength)*2);
    margin-top: calc(var(--baseunitheight)*2);
    margin-bottom: calc(var(--baseunitheight)*5);

}

td,
th {
    border: 1px solid #090909;
    height: calc(var(--baseunitheight)*10);
    padding: 10px;
}

tr:nth-child(even) {
    background-color: antiquewhite;
}

.simplechart {
    margin: 2vh 2vw;
    padding: 1vh 5vh;
    background-color: antiquewhite;
}

.rowofchart {
    display: flex;
    width: 100%;
    background-color: #fdfdfd;
    flex-wrap: wrap;
    margin-top: 1vh;
    margin-bottom: 5vh;
}

/* these are the dots in the graphic */
.counter-item {
    border-width: 2vw;
    border-style: solid;
    border-radius: 4vw;
    border-color: white;
    display: inline-block;
    align-self: center;
    background-color: rgb(0, 0, 0);
    width: 4vw;
    height: 4vw;
}

.sub {
    background-color: rgb(170, 170, 170);

}

.sub2 {
    background-color: rgb(66, 81, 255);

}

/*lastly we style the about page with its map*/
.actual-map {
    width: 80vw;
    height: 40vh;
    display: block;
    border-style: none;
    margin: 0 auto;
    padding: 2vw 2vh;
    background-color: antiquewhite;

}
.charttitle {
    margin-top: 4vh;
}
